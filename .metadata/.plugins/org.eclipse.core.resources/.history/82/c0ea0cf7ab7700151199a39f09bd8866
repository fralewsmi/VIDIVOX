package pkgBackgroundTasks;

import java.io.File;
import java.io.IOException;

import javax.swing.SwingWorker;

import pgkGUI.InputText;
import pgkGUI.MediaPlayer;

public class MergeTTS  extends SwingWorker<Void, Void> {

	String outputLocation = ".out1.mp4";
	String textInput = InputText.getTextInput();

	@Override // Multiple process builders with festival, text2wave and ffmpeg
	protected Void doInBackground() throws Exception {
		try {
			File file = new File(".text.txt");
			file.delete();
			String cmd = "echo " + textInput + " > .text.txt";
			ProcessBuilder builderText = new ProcessBuilder("/bin/bash", "-c", cmd);
			try {
				@SuppressWarnings("unused")
				Process process = builderText.start();
			} catch (IOException e1) {
				e1.printStackTrace();
			}
			file = new File(".wave.wav");
			file.delete();
			cmd = "text2wave -o .wave.wav .text.txt";
			ProcessBuilder builderWave = new ProcessBuilder("/bin/bash", "-c", cmd);
			try {
				Process process = builderWave.start();
				process.waitFor();
			} catch (IOException | InterruptedException e1) {
				e1.printStackTrace();
			}
			cmd = "ffmpeg -y -i .wave.wav -codec:a libmp3lame -qscale:a 2 .convert.mp3";
			ProcessBuilder builderConvert = new ProcessBuilder("/bin/bash", "-c", cmd);
			try {
				Process process = builderConvert.start();
				process.waitFor();
			} catch (IOException | InterruptedException e1) {
				e1.printStackTrace();
			}
			cmd = "ffmpeg -y -i " + MediaPlayer.getVideoLocation() + " -i .convert.mp3 -filter_complex amix=inputs=2 "
					+ outputLocation;
			ProcessBuilder builderAdd = new ProcessBuilder("/bin/bash", "-c", cmd);
			try {
				Process process = builderAdd.start();
				process.waitFor();
			} catch (IOException | InterruptedException e1) {
				e1.printStackTrace();
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
	
	// Play the new video once the process is done
	protected void done() {

		MediaPlayer.getMediaPlayerComponent().getMediaPlayer().playMedia(outputLocation);
	}

}